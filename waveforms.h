/**
 * @file waveforms.h
 * @brief Waveform library for 8-bit DACs
 * @author Waveform Generator Script
 * @date Generated automatically
 * 
 * This file contains 13 waveforms with 256 8-bit values each.
 * Value range: 0 to 255
 * 
 * Usage example:
 *   #include "waveforms.h"
 *   
 *   for(int i = 0; i < WAVE_ARRAY_SIZE; i++) {
 *       dac_output(sine_wave[i]);
 *       delay_us(100);
 *   }
 */

#ifndef WAVEFORMS_H
#define WAVEFORMS_H

#include <stdint.h>

// Configuration constants
#define WAVE_ARRAY_SIZE 256
#define WAVE_BITS 8
#define WAVE_MAX_VALUE 255

//=============================================================================
// WAVEFORM DATA
//=============================================================================

/**
 * @brief Classic sine wave
 */
const uint8_t sine_wave[WAVE_ARRAY_SIZE] = {
  128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 162, 165, 167, 170, 173,
  176, 179, 182, 185, 188, 190, 193, 196, 198, 201, 203, 206, 208, 211, 213, 215,
  218, 220, 222, 224, 226, 228, 230, 232, 234, 235, 237, 238, 240, 241, 243, 244,
  245, 246, 248, 249, 250, 250, 251, 252, 253, 253, 254, 254, 254, 255, 255, 255,
  255, 255, 255, 255, 254, 254, 254, 253, 253, 252, 251, 250, 250, 249, 248, 246,
  245, 244, 243, 241, 240, 238, 237, 235, 234, 232, 230, 228, 226, 224, 222, 220,
  218, 215, 213, 211, 208, 206, 203, 201, 198, 196, 193, 190, 188, 185, 182, 179,
  176, 173, 170, 167, 165, 162, 158, 155, 152, 149, 146, 143, 140, 137, 134, 131,
  128, 124, 121, 118, 115, 112, 109, 106, 103, 100,  97,  93,  90,  88,  85,  82,
   79,  76,  73,  70,  67,  65,  62,  59,  57,  54,  52,  49,  47,  44,  42,  40,
   37,  35,  33,  31,  29,  27,  25,  23,  21,  20,  18,  17,  15,  14,  12,  11,
   10,   9,   7,   6,   5,   5,   4,   3,   2,   2,   1,   1,   1,   0,   0,   0,
    0,   0,   0,   0,   1,   1,   1,   2,   2,   3,   4,   5,   5,   6,   7,   9,
   10,  11,  12,  14,  15,  17,  18,  20,  21,  23,  25,  27,  29,  31,  33,  35,
   37,  40,  42,  44,  47,  49,  52,  54,  57,  59,  62,  65,  67,  70,  73,  76,
   79,  82,  85,  88,  90,  93,  97, 100, 103, 106, 109, 112, 115, 118, 121, 124
};

/**
 * @brief Triangle wave
 */
const uint8_t triangle_wave[WAVE_ARRAY_SIZE] = {
  128, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157,
  159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189,
  191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221,
  223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253,
  255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225,
  223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193,
  191, 189, 187, 185, 183, 181, 179, 177, 175, 173, 171, 169, 167, 165, 163, 161,
  159, 157, 155, 153, 151, 149, 147, 145, 143, 141, 139, 137, 135, 133, 131, 129,
  128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100,  98,
   96,  94,  92,  90,  88,  86,  84,  82,  80,  78,  76,  74,  72,  70,  68,  66,
   64,  62,  60,  58,  56,  54,  52,  50,  48,  46,  44,  42,  40,  38,  36,  34,
   32,  30,  28,  26,  24,  22,  20,  18,  16,  14,  12,  10,   8,   6,   4,   2,
    0,   2,   4,   6,   8,  10,  12,  14,  16,  18,  20,  22,  24,  26,  28,  30,
   32,  34,  36,  38,  40,  42,  44,  46,  48,  50,  52,  54,  56,  58,  60,  62,
   64,  66,  68,  70,  72,  74,  76,  78,  80,  82,  84,  86,  88,  90,  92,  94,
   96,  98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126
};

/**
 * @brief Square wave
 */
const uint8_t square_wave[WAVE_ARRAY_SIZE] = {
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
};

/**
 * @brief Sawtooth wave
 */
const uint8_t sawtooth_wave[WAVE_ARRAY_SIZE] = {
    0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,
   16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,
   32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47,
   48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,
   64,  65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
   80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,  92,  93,  94,  95,
   96,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
  112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
  128, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
  143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
  159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
  175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
  191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
  207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
  223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
  239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254
};

/**
 * @brief Linear ramp 0‚Üímax
 */
const uint8_t ramp_wave[WAVE_ARRAY_SIZE] = {
    0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,
   16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,
   32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47,
   48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,
   64,  65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
   80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,  92,  93,  94,  95,
   96,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
  112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
  128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
  144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
  160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
  176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
  192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
  208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
  224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
  240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
};

/**
 * @brief Heart-shaped curve ‚ù§Ô∏è
 */
const uint8_t heart_wave[WAVE_ARRAY_SIZE] = {
  128, 130, 132, 134, 136, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151,
  152, 153, 153, 154, 154, 154, 155, 155, 155, 155, 155, 155, 155, 154, 154, 153,
  153, 152, 152, 151, 150, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140,
  139, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 130, 129, 129, 128, 128,
  128, 127, 127, 126, 126, 125, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116,
  116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 105, 104, 103, 103,
  102, 102, 101, 101, 100, 100, 100, 100, 100, 100, 100, 101, 101, 101, 102, 102,
  103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 119, 121, 123, 125,
  127, 130, 132, 135, 137, 140, 142, 145, 148, 150, 153, 156, 159, 162, 164, 167,
  170, 173, 176, 178, 181, 184, 186, 189, 191, 193, 195, 197, 199, 201, 202, 204,
  205, 206, 206, 207, 207, 207, 206, 206, 205, 203, 202, 200, 198, 195, 192, 189,
  186, 182, 179, 175, 171, 166, 162, 158, 153, 149, 145, 141, 137, 134, 131, 129,
  128, 126, 124, 121, 118, 114, 110, 106, 102,  97,  93,  89,  84,  80,  76,  73,
   69,  66,  63,  60,  57,  55,  53,  52,  50,  49,  49,  48,  48,  48,  49,  49,
   50,  51,  53,  54,  56,  58,  60,  62,  64,  66,  69,  71,  74,  77,  79,  82,
   85,  88,  91,  93,  96,  99, 102, 105, 107, 110, 113, 115, 118, 120, 123, 125
};

/**
 * @brief Flower pattern üå∏
 */
const uint8_t flower_wave[WAVE_ARRAY_SIZE] = {
  128, 143, 158, 173, 187, 200, 212, 223, 231, 239, 244, 247, 249, 249, 246, 242,
  236, 229, 220, 210, 199, 187, 174, 161, 148, 135, 122, 110,  99,  88,  79,  71,
   64,  58,  54,  51,  50,  50,  52,  54,  58,  63,  68,  74,  81,  88,  95, 102,
  109, 115, 121, 127, 131, 135, 138, 140, 141, 142, 141, 140, 139, 136, 134, 131,
  128, 124, 121, 119, 116, 115, 114, 113, 114, 115, 117, 120, 124, 128, 134, 140,
  146, 153, 160, 167, 174, 181, 187, 192, 197, 201, 203, 205, 205, 204, 201, 197,
  191, 184, 176, 167, 156, 145, 133, 120, 107,  94,  81,  68,  56,  45,  35,  26,
   19,  13,   9,   6,   6,   8,  11,  16,  24,  32,  43,  55,  68,  82,  97, 112,
  127, 143, 158, 173, 187, 200, 212, 223, 231, 239, 244, 247, 249, 249, 246, 242,
  236, 229, 220, 210, 199, 187, 174, 161, 148, 135, 122, 110,  99,  88,  79,  71,
   64,  58,  54,  51,  50,  50,  52,  54,  58,  63,  68,  74,  81,  88,  95, 102,
  109, 115, 121, 127, 131, 135, 138, 140, 141, 142, 141, 140, 139, 136, 134, 131,
  128, 124, 121, 119, 116, 115, 114, 113, 114, 115, 117, 120, 124, 128, 134, 140,
  146, 153, 160, 167, 174, 181, 187, 192, 197, 201, 203, 205, 205, 204, 201, 197,
  191, 184, 176, 167, 156, 145, 133, 120, 107,  94,  81,  68,  56,  45,  35,  26,
   19,  13,   9,   6,   6,   8,  11,  16,  24,  32,  43,  55,  68,  82,  97, 112
};

/**
 * @brief Archimedean spiral
 */
const uint8_t spiral_wave[WAVE_ARRAY_SIZE] = {
  128, 128, 128, 128, 128, 128, 129, 129, 130, 130, 131, 131, 132, 133, 133, 134,
  135, 136, 136, 137, 137, 138, 138, 139, 139, 140, 140, 140, 140, 140, 140, 139,
  139, 138, 138, 137, 136, 135, 134, 133, 131, 130, 129, 127, 125, 124, 122, 120,
  118, 117, 115, 113, 111, 109, 108, 106, 104, 103, 101, 100,  99,  98,  97,  96,
   96,  95,  95,  95,  95,  95,  96,  97,  98,  99, 100, 102, 103, 105, 108, 110,
  112, 115, 118, 120, 123, 126, 130, 133, 136, 139, 143, 146, 149, 152, 155, 158,
  161, 164, 167, 169, 171, 173, 175, 177, 178, 179, 180, 181, 181, 181, 181, 180,
  179, 178, 176, 174, 172, 170, 167, 164, 161, 157, 153, 150, 145, 141, 137, 132,
  128, 123, 118, 113, 108, 104,  99,  94,  90,  86,  81,  77,  74,  70,  67,  64,
   61,  59,  57,  55,  54,  53,  53,  53,  53,  54,  55,  57,  59,  61,  64,  68,
   71,  75,  79,  84,  89,  94, 100, 105, 111, 117, 123, 130, 136, 142, 149, 155,
  161, 167, 173, 179, 184, 190, 195, 199, 204, 208, 211, 214, 217, 219, 221, 222,
  223, 223, 223, 222, 221, 219, 217, 214, 210, 206, 202, 197, 192, 186, 180, 174,
  167, 160, 153, 145, 138, 130, 122, 114, 107,  99,  91,  83,  76,  69,  62,  55,
   49,  43,  37,  32,  27,  23,  20,  17,  14,  12,  11,  10,  11,  11,  13,  14,
   17,  20,  24,  29,  34,  39,  45,  52,  59,  66,  74,  83,  91, 100, 109, 118
};

/**
 * @brief Butterfly curve ü¶ã
 */
const uint8_t butterfly_wave[WAVE_ARRAY_SIZE] = {
  128, 128, 129, 130, 131, 132, 134, 136, 138, 140, 143, 147, 150, 154, 159, 163,
  168, 174, 179, 185, 191, 197, 203, 209, 215, 221, 226, 231, 236, 240, 243, 246,
  249, 250, 251, 251, 250, 249, 246, 243, 239, 234, 229, 223, 216, 209, 201, 193,
  185, 177, 168, 159, 151, 142, 134, 127, 119, 112, 106, 101,  96,  92,  89,  86,
   85,  84,  85,  86,  88,  90,  94,  98, 103, 108, 114, 120, 127, 134, 140, 147,
  154, 161, 168, 174, 180, 185, 190, 194, 198, 201, 203, 205, 206, 206, 205, 204,
  202, 200, 197, 194, 190, 185, 181, 176, 171, 166, 161, 156, 151, 146, 142, 138,
  134, 131, 127, 125, 123, 121, 120, 119, 119, 119, 119, 120, 121, 123, 124, 126,
  127, 129, 131, 132, 134, 135, 136, 136, 136, 136, 135, 134, 132, 130, 128, 125,
  121, 117, 113, 109, 104,  99,  94,  89,  84,  79,  74,  70,  65,  61,  58,  55,
   53,  51,  50,  49,  50,  50,  52,  54,  57,  61,  65,  70,  76,  81,  88,  94,
  101, 108, 115, 122, 128, 135, 141, 147, 152, 157, 161, 165, 168, 170, 171, 171,
  170, 169, 167, 163, 159, 155, 149, 143, 136, 129, 121, 113, 105,  96,  88,  79,
   70,  62,  54,  46,  39,  33,  27,  21,  16,  12,   9,   7,   5,   5,   5,   5,
    7,   9,  12,  16,  20,  24,  29,  35,  40,  46,  52,  58,  64,  70,  76,  82,
   87,  92,  97, 101, 105, 109, 112, 115, 117, 119, 121, 123, 124, 125, 126, 127
};

/**
 * @brief Lissajous curve (3:2)
 */
const uint8_t lissajous_wave[WAVE_ARRAY_SIZE] = {
  128, 137, 146, 155, 164, 172, 180, 187, 193, 198, 203, 207, 209, 211, 212, 212,
  211, 209, 206, 202, 198, 193, 188, 182, 175, 169, 162, 156, 149, 143, 138, 132,
  128, 123, 120, 117, 116, 115, 115, 116, 118, 121, 125, 129, 134, 140, 147, 154,
  162, 170, 178, 186, 195, 203, 211, 218, 225, 232, 238, 243, 247, 251, 253, 255,
  255, 255, 253, 251, 247, 243, 238, 232, 225, 218, 211, 203, 195, 186, 178, 170,
  162, 154, 147, 140, 134, 129, 125, 121, 118, 116, 115, 115, 116, 117, 120, 123,
  127, 132, 138, 143, 149, 156, 162, 169, 175, 182, 188, 193, 198, 202, 206, 209,
  211, 212, 212, 211, 209, 207, 203, 198, 193, 187, 180, 172, 164, 155, 146, 137,
  128, 118, 109, 100,  91,  83,  75,  68,  62,  57,  52,  48,  46,  44,  43,  43,
   44,  46,  49,  53,  57,  62,  67,  73,  80,  86,  93,  99, 106, 112, 117, 123,
  127, 132, 135, 138, 139, 140, 140, 139, 137, 134, 130, 126, 121, 115, 108, 101,
   93,  85,  77,  69,  60,  52,  44,  37,  30,  23,  17,  12,   8,   4,   2,   0,
    0,   0,   2,   4,   8,  12,  17,  23,  30,  37,  44,  52,  60,  69,  77,  85,
   93, 101, 108, 115, 121, 126, 130, 134, 137, 139, 140, 140, 139, 138, 135, 132,
  128, 123, 117, 112, 106,  99,  93,  86,  80,  73,  67,  62,  57,  53,  49,  46,
   44,  43,  43,  44,  46,  48,  52,  57,  62,  68,  75,  83,  91, 100, 109, 118
};

/**
 * @brief Chaotic signal üåÄ
 */
const uint8_t chaos_wave[WAVE_ARRAY_SIZE] = {
  128, 128, 128, 128, 128, 128, 128, 129, 130, 131, 132, 133, 135, 137, 139, 141,
  144, 147, 150, 153, 156, 160, 164, 168, 172, 176, 181, 185, 190, 194, 198, 202,
  206, 210, 214, 218, 221, 224, 227, 229, 231, 232, 234, 234, 235, 235, 234, 233,
  232, 230, 228, 226, 223, 219, 216, 212, 208, 203, 199, 194, 189, 184, 179, 174,
  169, 164, 159, 154, 150, 145, 141, 137, 134, 130, 127, 125, 122, 120, 119, 118,
  117, 116, 116, 116, 117, 118, 119, 121, 122, 124, 126, 129, 131, 134, 136, 139,
  141, 144, 146, 149, 151, 153, 155, 157, 158, 159, 160, 161, 162, 162, 162, 161,
  161, 160, 158, 157, 155, 154, 152, 149, 147, 145, 142, 140, 137, 135, 132, 130,
  128, 125, 123, 121, 120, 118, 117, 116, 116, 115, 115, 115, 116, 116, 117, 118,
  120, 122, 124, 126, 128, 130, 133, 135, 138, 141, 143, 146, 149, 151, 153, 155,
  157, 159, 160, 162, 162, 163, 163, 163, 163, 162, 161, 159, 157, 155, 152, 150,
  147, 143, 140, 136, 132, 128, 123, 119, 115, 110, 106, 102,  97,  93,  89,  86,
   82,  79,  76,  74,  72,  70,  68,  67,  66,  66,  66,  67,  68,  69,  71,  73,
   75,  78,  81,  84,  88,  92,  95, 100, 104, 108, 112, 116, 121, 125, 129, 133,
  136, 140, 143, 146, 149, 151, 154, 155, 157, 158, 159, 160, 160, 160, 159, 159,
  158, 157, 155, 154, 152, 150, 148, 146, 144, 142, 139, 137, 135, 133, 131, 129
};

/**
 * @brief Pulse train
 */
const uint8_t pulse_wave[WAVE_ARRAY_SIZE] = {
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
};

/**
 * @brief Pseudo-random noise
 */
const uint8_t noise_wave[WAVE_ARRAY_SIZE] = {
  106,   3, 210,  76,  94,  49, 144,  41,  32, 110, 143,  44, 141,  90, 244,  23,
  250, 105, 129,  38, 183,  48,  87,   6,  87, 247, 250, 190,   1, 240, 222, 197,
   46,  25, 106, 226, 147, 188,  59, 134, 181, 210, 206,  59, 223,  55, 204, 142,
   47, 150, 132, 244,  11,  42, 251, 212,  38,  58, 137,  40,  83,  13, 181,  20,
  254, 235, 201, 197,  94, 173, 194, 123,  16, 160,  83, 156, 107, 243,  51, 196,
  178, 142,  20,  42, 247,  59,  42,  74, 137, 133,   1,   1, 126,  47, 155, 204,
   24, 129, 104, 202, 243, 106,  62, 224,   7,  84, 101,  45, 173, 132,  63, 105,
  176,  83,  17, 117,  50, 158,  51,  34, 228,  84,  75, 137, 177, 171, 204,  66,
  109,  93, 132, 146, 160,  17,  95, 181,   9, 190, 175, 102, 115,  67, 188, 123,
   68,   7,  88, 235, 172, 160, 238,   8, 154,  48, 101,  46,  89, 230, 185, 216,
   19,  77, 200,  10,  48,  21, 208,  59, 108,   4,  29, 131, 202,  87,  81,  10,
   25,  38,  53, 145,  92, 249,  72, 218,  23, 135, 140, 168, 105, 134, 198,  39,
  136, 150, 199,  42, 106,   6, 169, 221,  90, 208, 168,   4, 120,  12,  80, 204,
   32, 144,  14,  28, 243,  25,  44, 240,  79,  55,  25, 127,  15,  56,  57, 190,
   41, 150,  62, 253, 253, 236, 230, 141, 237, 163,  41, 187, 217,   4,  50, 200,
  196, 143,  31,  68,  60, 250,  57,  94, 176, 169, 143, 166, 221, 233,  28,   8
};

//=============================================================================
// UTILITY ENUMS AND ARRAYS
//=============================================================================

/**
 * @brief Waveform type enumeration
 */
typedef enum {
    WAVE_SINE = 0,
    WAVE_TRIANGLE = 1,
    WAVE_SQUARE = 2,
    WAVE_SAWTOOTH = 3,
    WAVE_RAMP = 4,
    WAVE_HEART = 5,
    WAVE_FLOWER = 6,
    WAVE_SPIRAL = 7,
    WAVE_BUTTERFLY = 8,
    WAVE_LISSAJOUS = 9,
    WAVE_CHAOS = 10,
    WAVE_PULSE = 11,
    WAVE_NOISE = 12,
    WAVE_COUNT = 13  // Total number of waveforms
} waveform_type_t;

/**
 * @brief Array of waveform pointers for easy access
 */
const uint8_t* const waveforms[WAVE_COUNT] = {
    sine_wave,
    triangle_wave,
    square_wave,
    sawtooth_wave,
    ramp_wave,
    heart_wave,
    flower_wave,
    spiral_wave,
    butterfly_wave,
    lissajous_wave,
    chaos_wave,
    pulse_wave,
    noise_wave,
};

/**
 * @brief Waveform names for debugging/display
 */
const char* const waveform_names[WAVE_COUNT] = {
    "Sine Wave",
    "Triangle Wave",
    "Square Wave",
    "Sawtooth Wave",
    "Ramp Wave",
    "Heart Wave",
    "Flower Wave",
    "Spiral Wave",
    "Butterfly Wave",
    "Lissajous Wave",
    "Chaos Wave",
    "Pulse Wave",
    "Noise Wave",
};

/**
 * @brief Get waveform value at specific index
 * @param type Waveform type (0 to WAVE_COUNT-1)
 * @param index Sample index (0 to WAVE_ARRAY_SIZE-1)
 * @return 8-bit sample value (0-255)
 */
static inline uint8_t get_waveform_sample(waveform_type_t type, uint16_t index) {
    if (type >= WAVE_COUNT || index >= WAVE_ARRAY_SIZE) return 127; // Return center value for invalid params
    return waveforms[type][index];
}

#endif // WAVEFORMS_H

/*
 * Generated with:
 * - Bits: 8
 * - Array size: 256
 * - Data type: uint8_t
 * - Value range: 0-255
 * - Waveforms: 13
 */